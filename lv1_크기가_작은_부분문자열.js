/*
숫자로 이루어진 문자열 t와 p가 주어질 때, t에서 p와 길이가 같은 부분문자열 중에서, 
이 부분문자열이 나타내는 수가 p가 나타내는 수보다 작거나 같은 것이 나오는 횟수를 return하는 함수 solution을 완성하세요.

예를 들어, t="3141592"이고 p="271" 인 경우, t의 길이가 3인 부분 문자열은 314, 141, 415, 159, 592입니다. 
이 문자열이 나타내는 수 중 271보다 작거나 같은 수는 141, 159 2개 입니다.

제한사항
1 ≤ p의 길이 ≤ 18
p의 길이 ≤ t의 길이 ≤ 10,000
t와 p는 숫자로만 이루어진 문자열이며, 0으로 시작하지 않습니다.
*/

const a = []
const b = []
const solution = (t, p) => {
    // t의 길이 - p의 길이만큼 생성가능한 수
    for (let i = 0; i <= t.length - p.length; i++) {
        a.push(t.slice(i, i + p.length))
    }

    // 생성한 배열 중 p 보다 작은 수(강제 형변환으로 인해 형변환 따로 필요 없음)
    for (const i of a) {
        if (i <= p) {
            b.push(i)
        }
    }
    return b.length
}

console.log(solution('500220839878', '7'))
